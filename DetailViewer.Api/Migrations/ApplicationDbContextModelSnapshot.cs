// <auto-generated />
using System;
using DetailViewer.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DetailViewer.Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("DetailViewer.Api.Models.Assembly", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Author")
                        .HasColumnType("TEXT");

                    b.Property<int>("EskdNumberId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EskdNumberId");

                    b.ToTable("Assemblies");
                });

            modelBuilder.Entity("DetailViewer.Api.Models.AssemblyDetail", b =>
                {
                    b.Property<int>("AssemblyId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DetailId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AssemblyId", "DetailId");

                    b.HasIndex("DetailId");

                    b.ToTable("AssemblyDetails", (string)null);
                });

            modelBuilder.Entity("DetailViewer.Api.Models.AssemblyParent", b =>
                {
                    b.Property<int>("ParentAssemblyId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ChildAssemblyId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.HasKey("ParentAssemblyId", "ChildAssemblyId");

                    b.HasIndex("ChildAssemblyId");

                    b.ToTable("AssemblyParents");
                });

            modelBuilder.Entity("DetailViewer.Api.Models.Classifier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Classifiers");
                });

            modelBuilder.Entity("DetailViewer.Api.Models.DocumentDetailRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("EskdNumberId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FullName")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsManualDetailNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("BLOB");

                    b.Property<string>("YASTCode")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EskdNumberId");

                    b.ToTable("DocumentRecords");
                });

            modelBuilder.Entity("DetailViewer.Api.Models.ESKDNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ClassifierId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CompanyCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("DetailNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ClassifierId");

                    b.ToTable("ESKDNumbers");
                });

            modelBuilder.Entity("DetailViewer.Api.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Author")
                        .HasColumnType("TEXT");

                    b.Property<int>("EskdNumberId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EskdNumberId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("DetailViewer.Api.Models.ProductAssembly", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AssemblyId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProductId", "AssemblyId");

                    b.HasIndex("AssemblyId");

                    b.ToTable("ProductAssemblies");
                });

            modelBuilder.Entity("DetailViewer.Api.Models.ProductDetail", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DetailId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProductId", "DetailId");

                    b.HasIndex("DetailId");

                    b.ToTable("ProductDetails", (string)null);
                });

            modelBuilder.Entity("DetailViewer.Api.Models.Profile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("DetailViewer.Api.Models.Assembly", b =>
                {
                    b.HasOne("DetailViewer.Api.Models.ESKDNumber", "EskdNumber")
                        .WithMany()
                        .HasForeignKey("EskdNumberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EskdNumber");
                });

            modelBuilder.Entity("DetailViewer.Api.Models.AssemblyDetail", b =>
                {
                    b.HasOne("DetailViewer.Api.Models.Assembly", "Assembly")
                        .WithMany()
                        .HasForeignKey("AssemblyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DetailViewer.Api.Models.DocumentDetailRecord", "Detail")
                        .WithMany()
                        .HasForeignKey("DetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assembly");

                    b.Navigation("Detail");
                });

            modelBuilder.Entity("DetailViewer.Api.Models.AssemblyParent", b =>
                {
                    b.HasOne("DetailViewer.Api.Models.Assembly", "ChildAssembly")
                        .WithMany()
                        .HasForeignKey("ChildAssemblyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DetailViewer.Api.Models.Assembly", "ParentAssembly")
                        .WithMany()
                        .HasForeignKey("ParentAssemblyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChildAssembly");

                    b.Navigation("ParentAssembly");
                });

            modelBuilder.Entity("DetailViewer.Api.Models.DocumentDetailRecord", b =>
                {
                    b.HasOne("DetailViewer.Api.Models.ESKDNumber", "EskdNumber")
                        .WithMany()
                        .HasForeignKey("EskdNumberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EskdNumber");
                });

            modelBuilder.Entity("DetailViewer.Api.Models.ESKDNumber", b =>
                {
                    b.HasOne("DetailViewer.Api.Models.Classifier", "ClassNumber")
                        .WithMany("ESKDNumbers")
                        .HasForeignKey("ClassifierId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ClassNumber");
                });

            modelBuilder.Entity("DetailViewer.Api.Models.Product", b =>
                {
                    b.HasOne("DetailViewer.Api.Models.ESKDNumber", "EskdNumber")
                        .WithMany()
                        .HasForeignKey("EskdNumberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EskdNumber");
                });

            modelBuilder.Entity("DetailViewer.Api.Models.ProductAssembly", b =>
                {
                    b.HasOne("DetailViewer.Api.Models.Assembly", "Assembly")
                        .WithMany()
                        .HasForeignKey("AssemblyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DetailViewer.Api.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assembly");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DetailViewer.Api.Models.ProductDetail", b =>
                {
                    b.HasOne("DetailViewer.Api.Models.DocumentDetailRecord", "Detail")
                        .WithMany()
                        .HasForeignKey("DetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DetailViewer.Api.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Detail");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DetailViewer.Api.Models.Classifier", b =>
                {
                    b.Navigation("ESKDNumbers");
                });
#pragma warning restore 612, 618
        }
    }
}
